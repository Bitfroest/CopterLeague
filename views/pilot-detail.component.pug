div.container( *ngIf='pilot')
	div( [hidden]='!personalImages' )
		div.row
			div.col-lg-12
				div.well.my-drop-zone.height-300(ng2FileDrop, [ngClass]='{"nv-file-over": hasBaseDropZoneOver}', (fileOver)='fileOverBase($event)', [uploader]='uploader')
					span.centered Drag n Drop Bilder
				div.input-group
					label.input-group-btn
						span.btn.btn-default.btn-file Bilder auswählen
							input(type='file', ng2FileSelect, [uploader]='uploader', style='display: none;', accept='image/*', multiple)
		div.row
			div.col-lg-12
				div.table
					thead
						tr
							th( style='width: 50%;' ) Name
							th( style='width: 50%;' ) Fortschritt
							th Status
					tbody
						tr( *ngFor='let item of uploader.queue')
							td {{item?.file?.name}}
							td
								div.progress
									div.progress-bar(role='progress', [ngStyle]='{ "width": item.progress + "%"}')
							td.text-center
								span(*ngIf='item.isSuccess')
									i.glyphicon.glyphicon-ok
								span(*ngIf='item.isCancel')
									i.glyphicon.glyphicon-ban-circle
								span(*ngIf='item.isError')
									i.glyphicon.glyphicon-remove
		div.row
			div.col-lg-12
				div.progress
					div.progress-bar(role='progress', [ngStyle]='{ "width": uploader.progress + "%"}')
		div.row
			div.col-lg-12
				button.btn.btn-success.pull-right(type='button', (click)='uploader.uploadAll()', [disabled]='!uploader.getNotUploadedItems().length', style='margin-left:10px;') Upload
				button.btn.btn-warning.pull-right(type='button', (click)='personalImages=false;uploader.clearQueue();' ) Abbrechen
	div( [hidden]='!isEditable || personalImages')
		div.row.top-buffer
		form( (ngSubmit)='onSubmit()', #pilotForm='ngForm' )
			div.form-group
				label(for='alias') Nickname
				input.form-control(type='text', required [(ngModel)]='pilot.alias', ngControl='alias', #alias='ngForm')
				div.alert.alert-danger([hidden]='alias.valid || alias.pristine') Nickname wird benötigt
			div.row
				div.col-lg-6
					div.form-group
						label(for='firstName') Vorname
						input.form-control(type='text', [(ngModel)]='pilot.firstName', ngControl='firstName', #firstName='ngForm')
						div.alert.alert-danger([hidden]='firstName.valid || firstName.pristine') Vorname wird benötigt
				div.col-lg-6
					div.form-group
						label(for='familyName') Nachname
						input.form-control(type='text', [(ngModel)]='pilot.familyName', ngControl='familyName', #familyName='ngForm')
						div.alert.alert-danger([hidden]='familyName.valid || familyName.pristine') Nachname wird benötigt
			div.form-group
				label(for='telephone') Telefon
				input.form-control(type='text', [(ngModel)]='pilot.telephone', ngControl='telephone', #telephone='ngForm')
				div.alert.alert-danger([hidden]='telephone.valid || telephone.pristine') Telefon wird benötigt
			div.form-group
				label(for='notes') Beschreibung
				textarea.form-control(type='text', [(ngModel)]='pilot.notes', ngControl='notes', #notes='ngForm', rows='3')
				div.alert.alert-danger([hidden]='notes.valid || notes.pristine') Beschreibung wird benötigt
			div.form-group
				div.well( [innerHTML]='pilot. notes | markdown' )
			div.form-group.hidden
				label(for='id') id
				input.form-control(type='text', required [(ngModel)]='pilot.id', ngControl='id', #id='ngForm')
				div.alert.alert-danger([hidden]='id.valid || id.pristine') Id wird benötigt
			div.form-group
				label(for='location') Adresse für einen Marker auf der Karte
				input.form-control#search-box(type='text', [(ngModel)]='pilot.location', ngControl='location', #location='ngForm')
				div.alert.alert-danger([hidden]='location.valid || location.pristine') Straße und Hausnummer werden benötigt
			div.row.hidden
				div.col-lg-4
					div.form-group
						input.form-control(type='text', [(ngModel)]='pilot.lat', ngControl='lat', #lat='ngForm')
				div.col-lg-6
					div.form-group
						input.form-control(type='text', [(ngModel)]='pilot.lng', ngControl='lng', #lng='ngForm')
			div.row
				div.col-lg-4.col-lg-offset-8
					button.btn.btn-default.pull-right(type='submit', [disabled]='!pilotForm.form.valid') Speichern
					button.btn.btn-warning.pull-right(type='button', (click)='isEditable=false;getPilot()') Abbrechen
			div.row.top-buffer
	div( [hidden]='isEditable || personalImages')
		div.row
			div.col-md-12
				h2 {{pilot.alias}}
				hr
		div.row
			div.col-md-6
				img.img-centered( *ngIf='pilot?.avatar', [src]='pilot?.avatar?.medium')
				img.img-centered( *ngIf='!pilot?.avatar', src='placeholder.png')
			div.col-md-6
				div.panel.panel-primary
					div.panel-heading Persönliche Informationen
					div.panel-body
						div
							label Name
							span.pull-right {{pilot.firstName}} {{pilot.familyName}}
						div( *ngIf='pilot.telephone')
							label Telefon
							span.pull-right {{pilot.telephone}}
						div( *ngIf='pilot.Multis?.length' )
							label Anzahl Multirotors
							span.pull-right {{pilot.Multis?.length}}
						div
							h4 Fluggebiet:
						div
							label Adresse
							span.pull-right {{pilot.location}}
						div( *ngIf='pilot.lat && pilot.lng')
							img.img-pilots( src="{{getLocationLink()}}" )
		div.row( *ngIf='pilot.notes != ""')
			div.col-md-12
				h2 Beschreibung
				hr(style='margin-top: 0px;')
				div( [innerHTML]='pilot.notes | markdown')
		div.row.top-buffer
		div.row
			div.col-md-12
				h3( *ngIf='pilot.Multis?.length > 1' ) {{pilot.Multis?.length}} Im Hangar:
				h3( *ngIf='pilot.Multis?.length == 1' ) Einer Im Hangar:
				h3( *ngIf='!pilot.Multis?.length' ) Dieser Pilot besitzt noch keinen Multicopter.
				hr
		div.row.top-buffer
		div.row-fluid
			div.col-xs-12.col-sm-6.col-md-4.col-lg-4( *ngFor='let multi of pilot.Multis' )
				div.panel.panel-default.panel-profile.m-b-25( [hidden]='multi.edit' )
					div.panel-heading.height-300(style='background-image: url(placeholder.png)')
					div.panel-body
						div
							h2.panel-title {{multi.name}}
						div
							label Propellergröße:
							span.pull-right {{multi.propellerSize}}
						div
							label Rotorblätter:
							span.pull-right {{multi.propellerBlades}}
						div
							label Motoren:
							span.pull-right {{multi.numberOfMotors}}
						div
							label Rahmengröße:
							span.pull-right {{multi.frameSize}}
						div
							label Akku:
							span.pull-right {{multi.battery}}
						div
							label Beschreibung: 
							div( [innerHTML]='multi.notes | markdown')
						div
							button.btn.btn-default( [class.hidden]='!active || isEditable || multi.edit', (click)='multi.edit=true' ) Copter Bearbeiten
				div([hidden]='!multi.edit')
					form( (ngSubmit)='editCopter(multi)', #copterForm='ngForm' )
						div.form-group
							label(for='name') Name
							input.form-control(required [(ngModel)]='multi.name', ngControl='name', #name='ngForm')
							div.alert.alert-danger([hidden]='name.valid || name.pristine') Name wird benötigt
						div.form-group
							label(for='propellerSize') Propellergröße
							div.input-group
								select.form-control(required [(ngModel)]='multi.propellerSize', ngControl='propellerSize', #propellerSize='ngForm')
									option 1
									option 2
									option 3
									option 4
									option 5
									option 6
								span.input-group-addon inch
							div.alert.alert-danger([hidden]='propellerSize.valid || propellerSize.pristine') Propellergröße wird benötigt
						div.form-group
							label(for='frameSize') maximaler Rotorabstand
							div.input-group
								input.form-control(required [(ngModel)]='multi.frameSize', ngControl='frameSize', #frameSize='ngForm')
								span.input-group-addon mm
							div.alert.alert-danger([hidden]='frameSize.valid || frameSize.pristine') Rotorabstand wird benötigt
						div.form-group
							label(for='propellerBlades') Rotorblätter
							select.form-control(required [(ngModel)]='multi.propellerBlades', ngControl='propellerBlades', #propellerBlades='ngForm')
								option 1
								option 2
								option 3
								option 4
							div.alert.alert-danger([hidden]='propellerBlades.valid || propellerBlades.pristine') Rotorblätter wird benötigt
						div.form-group
							label(for='numberOfMotors') Anzahl der Motoren
							select.form-control(required [(ngModel)]='multi.numberOfMotors', ngControl='numberOfMotors', #numberOfMotors='ngForm')
								option 1
								option 3
								option 4
								option 6
							div.alert.alert-danger([hidden]='numberOfMotors.valid || numberOfMotors.pristine') Anzahl der Motoren wird benötigt
						div.form-group
							label(for='battery') Batterietyp
							div.input-group
								select.form-control(required [(ngModel)]='multi.battery', ngControl='battery', #battery='ngForm')
									option 3
									option 4
								span.input-group-addon Zellen
							div.alert.alert-danger([hidden]='battery.valid || battery.pristine') Batterietyp wird benötigt
						div.alert.alert-dismissible.alert-custom
							button.close(type='button', data-dismiss='alert' ) &times;
							p Wusstest du schon: Du kannst Markdown verwenden um deine Beschreibung zu stylen.
						div.form-group
							label(for='notes') Beschreibung
							textarea.form-control(type='text', [(ngModel)]='multi.notes', ngControl='notes', #notes='ngForm', rows='5')
							div.alert.alert-danger([hidden]='notes.valid || notes.pristine') Beschreibung wird benötigt
						button.btn.btn-success.pull-right(type='submit', [disabled]='!copterForm.form.valid') Speichern
						button.btn.btn-warning.pull-right(type='button', (click)='multi.edit=false;getMultis()') Abbrechen
		div.row
			div.col-md-12
				h3 #Teilgenommene Events {{pilot.Events?.length}}
				hr
		table.table.table-striped
			tr
				td ID
				td Event
				td Datum
				td Punkte
			tr( *ngFor='#event of pilot.Events')
				td {{event.id}}
				td {{event.title}}
				td {{event.date | iso8601ToDate }}
				td
	div
		button.btn.btn-primary( (click)='goBack()' ) Zurück
		button.btn.btn-default.pull-right( [class.hidden]='!active || isEditable || addCopter || personalImages', (click)='isEditable=true; loadPlaces()', style='margin-left:10px;' ) Profil Bearbeiten
		button.btn.btn-success.pull-right( [class.hidden]='!active || isEditable || addCopter || personalImages', (click)='addNewCopter()', style='margin-left:10px;') Copter Hinzufügen
		button.btn.btn-default.pull-right( [class.hidden]='!active || isEditable || addCopter || personalImages', (click)='personalImages=true;', style='margin-left:10px;') Bilder